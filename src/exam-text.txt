Реализовать многопоточный чат:

Клиент устанавливает соединение с сервером и не разрывает его после каждой отправки сообщения
..поменять код

У клиента (кроме, основного) будет два потока:
1. отправитель соощений (пользователь вводит сообщение в консоль, поток отправляет его на сервер)
2. получатель сообщений


Клиент и сервер передают друг другу экземпляры класса Message (свойства: отправитель (String), текст, дата))


Сервер
Потоки сервера (кроме основного):
коллекция соединений
блокирующая очередь сообщений
1. на каждое подключение выделяется отдельный поток,
который принимает сообщения от клиента и добавляет их блокирующую очередь
каждый поток получатель получает сообщение от клиента и добавляет в очередь (не рассылка)

2. один поток - отправитель сообщений: забирает сообщение из блокирующей очереди и
рассылает сообщения всем клиентам, кроме отправителя
метод take  из очереди проходится по всей колеекции собщений и отправляет всем кроме отправителя
(уникально добавить что-то кому-то)
когда клиент отсоединится (брейк)-то из коллекции соединений соединение это нужно удалить(надо найти где будет выбрасывается исключение
и такое исключение обработаете и в обработке соединение которое привело к ошибке нужно удалить из коллекции )


заметки:
сервер ждет
клиенты подключаются отправляют сообщения, сервер берет сообщения и рассылает другим клиентам
сервер рассылает simplemessage

у клиента помимо основного еще два:
-мейн
- поток, который получает данные от пользователя и отправляет их на сервер
-получает сообщение от сервера и выводит в консоль
connection один и у получателя и у отправителя (в двух потоках один конектион)

СЕРВЕР:
  /*  class ConnectionsThread extends Thread{
        private Socket socket;
        private Connection connection;

        public ConnectionsThread(Socket socket) throws IOException{
            this.socket = socket;
            this.connection = new Connection(socket);
        }

        @Override
        public void run() {

        }
    }


   */